name: Build & Publish ISO Images

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * mon" # every monday at 3AM

concurrency: build

jobs:
  build-images:
    name: "Build ISO Images"
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Install nix
        uses: cachix/install-nix-action@master
        with:
          install_url: https://nixos.org/nix/install
          extra_nix_config: |
            experimental-features = nix-command flakes
            allow-import-from-derivation = false
            extra-substituters = https://hyprland.cachix.org
            extra-trusted-public-keys = hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc=

      - name: Nix Magic Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build ISO Images
        shell: bash
        run: nix-shell -p nixos-generators --run "nixos-generate --format iso --configuration ./hosts/iso/configuration.nix -o result"

      - uses: actions/upload-artifact@v4
        with:
          name: WKS012-NixOS-iso-image
          path: result/iso/*.iso

  # publish built images
  publish-images:
    name: "Publish ISO Images"
    runs-on: ubuntu-latest
    needs: build-images

    permissions:
      contents: write

    env:
      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    steps:
      - name: Download ISO Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R

      - name: Calculate Checksums
        run: |
          calculate_checksum() {
            sha256sum "$1" | awk '{print $1}'
          }

          iso_files=$(find ./result/iso/ -maxdepth 1 -type f -name "*.iso")

          # write checksums
          for file in $iso_files; do
            checksum=$(calculate_checksum "$file")
            echo "$file $checksum" >> checksums.txt
          done

      - name: Get current date
        id: get-date
        # output format: 2023-12-30-234559
        run: echo "date=$(date +'%Y-%m-%d-%H%M%S')" >> "${GITHUB_OUTPUT}"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: "iso-${{ steps.get-date.outputs.date }}"
          tag_name: "iso-${{ steps.get-date.outputs.date }}"
          files: |
            *.iso
            checksums.txt
          body: |
            # Weekly Iso Releases

            > ${{ steps.get-date.outputs.date }}

            Weekly automated ISO releases for my Portable NixOS workstation.
